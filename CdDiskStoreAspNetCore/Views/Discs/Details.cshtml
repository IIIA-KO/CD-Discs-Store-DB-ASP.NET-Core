@using CdDiskStoreAspNetCore.Data.Models
@inject SignInManager<IdentityUser> SignInManger
@model DiscsDetailsViewModel

<div class=“container”>
    <h1 class=“mb-4”>Details</h1>

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Disc</h4>
            <hr />

            <table class="table table-bordered table-striped">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Disc.Name)</th>
                    <td>@Html.DisplayFor(model => model.Disc.Name)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Disc.Price)</th>
                    <td>@Html.DisplayFor(model => model.Disc.Price)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Type)</th>
                    <td>@Html.DisplayFor(model => model.Type)</td>
                </tr>
            </table>
        </div>
    </div>

    <br />

    @if (Model.Musics != null && Model.Musics.Any())
    {
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Music</h4>
                <hr />

                <table class="table table-responsive">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Musics.First().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Musics.First().Genre)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Musics.First().Artist)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Musics.First().Language)
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Musics)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Genre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Artist)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Language)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <br />

    @if (Model.Films != null && Model.Films.Any())
    {
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Films</h4>
                <hr />

                <table class="table table-responsive">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Films.First().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Films.First().Genre)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Films.First().Producer)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Films.First().MainRole)
                            </th>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.Films.First().AgeLimit)
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Films)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Genre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Producer)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MainRole)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AgeLimit)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <div class="mt-3">
        @if (SignInManger.IsSignedIn(User) && (User.IsInRole("Administrator") || User.IsInRole("Manager")))
        {
            <a asp-action="Create" asp-route-id="@Model?.Disc.Id" class="btn btn-primary">Edit</a>
        }
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>