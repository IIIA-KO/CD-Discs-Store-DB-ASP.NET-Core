@model ChangeDiscTypePriceViewModel

@inject SignInManager<IdentityUser> SignInManger

@if (!SignInManger.IsSignedIn(User) || !User.IsInRole("Administrator"))
{
    <h1 style="color: red;">ACCESS DENIED</h1>
}
else
{
    <div class="container py-5">
        <h2 class="mb-4">Change Disc Type Price</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        <form method="post" asp-action="Execute">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="DiscType">Disc Type:</label>
                @Html.DropDownListFor(model => model.DiscType, new SelectList(Enum.GetValues(typeof(CdDiskStoreAspNetCore.Models.Enums.DiscType))), new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label asp-for="Percent">Percent:</label>
                <input asp-for="Percent" type="number" name="Percent" class="form-control" id="Percent" required />
                <span asp-validation-for="Percent" class="text-danger"></span>
            </div>

            <div class="form-check">
                <label asp-for="Increase" class="form-check-label">Increase (otherwise decrease):</label>
                <input asp-for="Increase" type="checkbox" name="Increase" class="form-check-input" id="Increase" />
                <span asp-validation-for="Increase" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary mt-3">Execute</button>
        </form>

        <div class="mt-3">
            <a asp-controller="AdminPanel" asp-action="Index" class="btn btn-secondary">Back to Admin Panel</a>
        </div>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}