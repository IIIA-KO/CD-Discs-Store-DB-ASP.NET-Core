@inject SignInManager<IdentityUser> SignInManger
@model CdDiskStoreAspNetCore.Models.ClientDetailsViewModel

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<div class="container mt-3">
    <h1 class="mb-4">Details</h1>

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Client</h4>
            <hr />

            <table class="table table-bordered table-striped">
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.FirstName)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.FirstName)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.LastName)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.LastName)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.Address)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.Address)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.City)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.City)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.ContactPhone)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.ContactPhone)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.ContactMail)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.ContactMail)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.BirthDay)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.BirthDay)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.MarriedStatus)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.MarriedStatus)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.Sex)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.Sex)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Client.HasChild)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.Client.HasChild)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.PersonalDiscount)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.PersonalDiscount) %
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.TotalProfit)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.TotalProfit)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.RentProfit)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.RentProfit)
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-2">
                        @Html.DisplayNameFor(model => model.PurchaseProfit)
                    </th>
                    <td class="col-sm-10">
                        @Html.DisplayFor(model => model.PurchaseProfit)
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <br />

    @if (Model.ContactPhones != null && Model.ContactPhones.Any())
    {
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Contact Phones</h4>
                <hr />

                <table class="table table-responsive">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.ContactPhones)
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.ContactPhones)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <br />

    @if (Model.ContactMails != null && Model.ContactMails.Any())
    {
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Contact Mails</h4>
                <hr />

                <table class="table table-responsive">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(modelItem => Model.ContactMails)
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.ContactMails)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <div class="mt-3">
        @if (SignInManger.IsSignedIn(User) && User.IsInRole("Administrator"))
        {
            <div>
                <button class="btn btn-primary mb-2 w-100" data-bs-toggle="modal" data-bs-target="#changeDiscountModal">
                    Change Discount Level For Client
                </button>
            </div>

            <div class="modal fade" id="changeDiscountModal" tabindex="-1" aria-labelledby="changeDiscountModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="changeDiscountModalLabel">Change Discount Level For Client</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form method="post" asp-controller="ChangeDiscountLevel" asp-action="Execute" asp-route-idClient="@Model.Client.Id" asp-route-increase="@Model.Increase">
                                <div class="mb-3">
                                    <label asp-for="Increase" class="form-label">Increase (otherwise decrease):</label>
                                    <input asp-for="Increase" type="checkbox" class="form-check-input" />
                                    <span asp-validation-for="Increase" class="text-danger"></span>
                                </div>

                                <button type="submit" class="btn btn-primary">Execute</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            @if (SignInManger.IsSignedIn(User) && (User.IsInRole("Administrator") || User.IsInRole("Manager")))
            {
                <a asp-action="Create" asp-route-id="@Model?.Client.Id" class="btn btn-primary me-md-2">Edit</a>
            }
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </div>
</div>